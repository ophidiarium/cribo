on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

name: Code Quality Checks

# see https://doc.rust-lang.org/stable/clippy/continuous_integration/github_actions.html

# Make sure CI fails on all warnings, including Clippy lints
env:
  RUSTFLAGS: '-Dwarnings'
  CLICOLOR: 1

jobs:
  clippy_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Cache Cargo registry
        uses: actions/cache@v4.2.3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache build artifacts
        uses: actions/cache@v4.2.3
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}

      - run: rustup component add clippy
      - run: cargo clippy --workspace --all-targets --all-features --locked

      # Generate clippy JSON report for SonarQube
      - name: Generate Clippy report for SonarQube
        run: cargo clippy --workspace --all-targets --all-features --locked --message-format=json > target/clippy.json || true

      - run: rustup component add rustfmt
      - run: cargo fmt --all --check

      - name: Spell Check Repo
        uses: crate-ci/typos@v1.33.1

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install rust-code-analysis
        env:
          RCA_LINK: https://github.com/mozilla/rust-code-analysis/releases/download
          RCA_VERSION: v0.0.25
        run: |
          mkdir -p $HOME/.local/bin
          curl -L "$RCA_LINK/$RCA_VERSION/rust-code-analysis-linux-cli-x86_64.tar.gz" |
          tar xz -C $HOME/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Run rust-code-analysis
        run: |
          mkdir $HOME/rca-json
          rust-code-analysis-cli --metrics -O json --pr -o "$HOME/rca-json" -p crates/cribo/src

      - name: Upload rust-code-analysis json
        uses: actions/upload-artifact@v4
        with:
          name: rca-json-ubuntu
          path: ~/rca-json

      - name: Cargo Machete
        uses: bnjbvr/cargo-machete@v0.8.0
