name: Continuous Benchmarking

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened, edited]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run with debug logging'
        required: false
        type: boolean
        default: false

permissions:
  contents: read
  pull-requests: write
  actions: read

jobs:
  benchmark:
    name: Run Benchmarks with Bencher
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for accurate comparisons

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo target
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-target-bench-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-bench-
            ${{ runner.os }}-cargo-target-

      # Main Bencher.dev integration for comprehensive benchmarking
      - name: Run Benchmarks with Bencher
        uses: bencherdev/bencher@main
        env:
          BENCHER_PROJECT: cribo
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          BENCHER_TESTBED: ubuntu-latest
          BENCHER_ADAPTER: rust_criterion
          BENCHER_START_POINT: ${{ github.base_ref }}
          BENCHER_START_POINT_CLONE_THRESHOLDS: true
          BENCHER_BRANCH: ${{ github.head_ref || github.ref_name }}
          BENCHER_ERR: true
          GITHUB_ACTIONS: ${{ secrets.GITHUB_TOKEN }}
        with:
          cmd: |
            cargo bench --bench bundling -- --output-format criterion

      # Upload benchmark artifacts for debugging
      - name: Upload benchmark results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ github.sha }}
          path: |
            target/criterion/
          retention-days: 7
