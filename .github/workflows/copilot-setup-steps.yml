name: 'Copilot Setup Steps'

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:

  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps,
      # for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy, rustfmt

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true
          ignore-nothing-to-cache: true
          python-version: 3.12

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Python dependencies
        run: uv sync --all-groups

      - name: Install lefthook
        run: lefthook install

      - name: Install cargo-insta
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-insta

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-nextest

      - name: Install taplo
        uses: taiki-e/install-action@v2
        with:
          tool: taplo

      - name: Install typos
        uses: taiki-e/install-action@v2
        with:
          tool: typos-cli

      - name: Install dprint
        run: npm install -g dprint

      - name: Install commitlint dependencies
        run: npm install -g @commitlint/cli @commitlint/config-conventional
      - name: Verify installation
        run: |
          echo "🦀 Rust toolchain:"
          rustc --version
          cargo --version

          echo "🐍 Python environment:"
          python --version
          uv --version

          echo "📦 Node.js tools:"
          bun --version
          
          echo "🎨 Formatting tools:"
          dprint --version
          commitlint --version

          echo "🔧 Development tools:"
          cargo insta --version
          cargo nextest --version
          taplo --version
          typos --version

          echo "🧪 Testing lefthook tools via bunx:"
          echo "✓ bunx can find dprint: $(bunx --version > /dev/null && echo 'yes' || echo 'no')"
          echo "✓ bunx can find taplo: $(which bunx > /dev/null && echo 'yes' || echo 'no')"
          echo "✓ bunx can find commitlint: $(which bunx > /dev/null && echo 'yes' || echo 'no')"
