name: Ecosystem Tests

on:
  pull_request:
    paths:
      - 'crates/**'
      - 'ecosystem/**'
      - '.github/workflows/ecosystem-tests.yml'
      - 'Cargo.toml'
      - 'Cargo.lock'
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  pull-requests: write
  issues: write

jobs:
  ecosystem-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true
          python-version: 3.12

      - name: Install Python dependencies
        run: uv sync --all-groups

      - name: Build cribo (release mode)
        run: cargo build --release --bin cribo

      - name: Run ecosystem tests
        run: cargo test --test test_ecosystem -- --ignored --nocapture

      - name: Run ecosystem benchmarks
        id: bench
        run: |
          # Run benchmarks and save results
          cargo bench --bench ecosystem -- --save-baseline pr-${{ github.event.pull_request.number || 'main' }}

          # If this is a PR, compare against main
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Try to load main baseline for comparison
            if cargo bench --bench ecosystem -- --load-baseline main &>/dev/null; then
              cargo bench --bench ecosystem -- --baseline main > benchmark_results.txt 2>&1 || true
            else
              echo "No main baseline found for comparison" > benchmark_results.txt
            fi
          fi

      - name: Generate benchmark report
        if: github.event_name == 'pull_request'
        id: benchmark-report
        run: |
          # Create a markdown report using grouped commands to avoid shellcheck SC2129
          {
            cat << 'EOF'
          ## ðŸ“Š Ecosystem Test Results

          ### âœ… Test Status
          All ecosystem tests passed successfully!

          ### ðŸ“ˆ Benchmark Results

          EOF

            if [ -f benchmark_results.txt ]; then
              echo '```'
              cat benchmark_results.txt
              echo '```'
            else
              echo "No benchmark comparison available."
            fi

            # Add bundle size information if available
            if [ -d target/tmp ]; then
              echo -e "\n### ðŸ“¦ Bundle Sizes\n"
              find target/tmp -name "*_bundled.py" -exec ls -lh {} \; | awk '{print "- " $9 ": " $5}'
            fi
          } > ecosystem-report.md

      - name: Post PR comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('ecosystem-report.md', 'utf8');

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('ðŸ“Š Ecosystem Test Results')
            );

            const body = report + '\n\n<sub>Generated by ecosystem-tests workflow</sub>';

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

      - name: Upload benchmark results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ecosystem-benchmark-results
          path: |
            target/criterion/
            ecosystem-report.md
            benchmark_results.txt
