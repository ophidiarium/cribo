name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.12']
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2
        with:
          # Use a shared cache key based on Cargo.lock hash for better cache invalidation
          # Include hash to ensure cache is invalidated when dependencies change
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          # Cache even on build failures to speed up subsequent runs
          cache-on-failure: true

      - name: Set up uv
        uses: astral-sh/setup-uv@f0ec1fc3b38f5e7cd731bb6ce540c5af426746bb # v6
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Run Rust tests
        run: cargo test --workspace

      - name: Install Serpen (development)
        run: uv run --with maturin -- maturin develop --release

      - name: Smoke test CLI
        run: |
          uv run python -m serpen --help
          uv run serpen --version

      - name: E2E bundle test
        env:
          ENTRY_FILE: crates/serpen/tests/fixtures/simple_project/main.py
          OUTPUT_FILE: bundle-test/out.py
        run: |
          mkdir bundle-test
          uv run python -m serpen --entry "${{ env.ENTRY_FILE }}" --output "${{ env.OUTPUT_FILE }}"
          uv run python "${{ env.OUTPUT_FILE }}"
