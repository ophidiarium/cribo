---
source: crates/cribo/tests/test_cli_stdout.rs
expression: stderr
---
warning: struct `NamespaceImportParams` is never constructed
  --> crates/cribo/src/code_generator.rs:61:8
   |
61 | struct NamespaceImportParams<'a> {
   |        ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `InlinedImportParams` is never constructed
  --> crates/cribo/src/code_generator.rs:76:8
   |
76 | struct InlinedImportParams<'a> {
   |        ^^^^^^^^^^^^^^^^^^^

warning: struct `AddSymbolsParams` is never constructed
  --> crates/cribo/src/code_generator.rs:83:8
   |
83 | struct AddSymbolsParams<'a> {
   |        ^^^^^^^^^^^^^^^^

warning: struct `SymbolImportParams` is never constructed
  --> crates/cribo/src/code_generator.rs:97:8
   |
97 | struct SymbolImportParams<'a> {
   |        ^^^^^^^^^^^^^^^^^^

warning: fields `entry_created_namespaces` and `created_namespace_modules` are never read
    --> crates/cribo/src/code_generator.rs:1552:5
     |
1521 | pub struct HybridStaticBundler {
     |            ------------------- fields in this struct
...
1552 |     entry_created_namespaces: FxIndexSet<String>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^
...
1555 |     created_namespace_modules: FxIndexSet<String>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
    --> crates/cribo/src/code_generator.rs:1613:8
     |
1583 | impl HybridStaticBundler {
     | ------------------------ associated items in this implementation
...
1613 |     fn is_module_namespace_access(&self, expr: &Expr) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1640 |     fn expr_to_module_path(&self, expr: &Expr) -> Option<String> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1820 |     fn is_in_circular_dependency(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
3568 |     fn create_import_hook(&self) -> Vec<Stmt> {
     |        ^^^^^^^^^^^^^^^^^^
...
3652 |     fn create_namespace_attr_assignment(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
3691 |     fn create_number_literal(&self, value: i32) -> Expr {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
4169 |     fn generate_submodule_attributes(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
     --> crates/cribo/src/code_generator.rs:5749:8
      |
5700  | impl HybridStaticBundler {
      | ------------------------ associated items in this implementation
...
5749  |     fn collect_module_symbol(&self, stmt: &Stmt, symbols: &mut Vec<String>) {
      |        ^^^^^^^^^^^^^^^^^^^^^
...
5902  |     fn add_imported_symbol_attributes(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6064  |     fn transform_bundled_import_from_multiple(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6307  |     fn rewrite_import_in_stmt_multiple_with_context(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6362  |     fn handle_inlined_module_import(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6492  |     fn check_if_importing_module(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
6515  |     fn create_namespace_for_inlined_module(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6575  |     fn add_symbols_to_namespace(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
6620  |     fn add_symbol_to_namespace(
      |        ^^^^^^^^^^^^^^^^^^^^^^^
...
6648  |     fn handle_symbol_import_from_inlined_module(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6834  |     fn find_modules_with_function_imports(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6852  |     fn module_has_function_scoped_imports(&self, ast: &ModModule) -> bool {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6874  |     fn class_has_method_imports(&self, class_def: &StmtClassDef) -> bool {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
6881  |     fn function_has_imports(body: &[Stmt]) -> bool {
      |        ^^^^^^^^^^^^^^^^^^^^
...
7193  |     fn find_function_imported_modules(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7716  |     fn transform_function_body_for_renames(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7727  |     fn transform_stmt_for_renames(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7809  |     fn rename_references_in_expr(expr: &mut Expr, module_renames: &FxIndexMap<String, String>) {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
8005  |     fn process_wrapper_module_import(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
8253  |     fn track_import_aliases(
      |        ^^^^^^^^^^^^^^^^^^^^
...
8309  |     fn get_actual_import_name(
      |        ^^^^^^^^^^^^^^^^^^^^^^
...
8736  |     fn rewrite_import(&self, import_stmt: StmtImport) -> Vec<Stmt> {
      |        ^^^^^^^^^^^^^^
...
8867  |     fn rewrite_import_entry_module(&mut self, import_stmt: StmtImport) -> Vec<Stmt> {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9056  |     fn handle_dotted_import_attribute(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9078  |     fn create_parent_namespaces_entry_module(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9169  |     fn create_namespace_keywords(&self, full_module_path: &str, inlined_key: &str) -> Vec<Keyword> {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
9255  |     fn create_module_assignment(&self, final_body: &mut Vec<Stmt>, module: &str) {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
9273  |     fn assignment_has_dotted_target(&self, assign: &StmtAssign, parent: &str, attr: &str) -> bool {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9284  |     fn is_module_already_assigned(&self, final_body: &[Stmt], module: &str) -> bool {
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9312  |     fn is_name_chain(&self, expr: &Expr, expected_chain: &str) -> bool {
      |        ^^^^^^^^^^^^^
...
9418  |     fn populate_namespace_with_module_symbols(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
9432  |     fn populate_namespace_with_module_symbols_using_target(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
10054 |     fn create_namespace_object_for_direct_import(
      |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `location`, `context`, and `name_used` are never read
  --> crates/cribo/src/visitors/import_discovery.rs:37:9
   |
35 | pub struct ImportUsage {
   |            ----------- fields in this struct
36 |     /// Where the name was used
37 |     pub location: TextRange,
   |         ^^^^^^^^
38 |     /// In what execution context
39 |     pub context: ExecutionContext,
   |         ^^^^^^^
40 |     /// The actual name used (might be aliased)
41 |     pub name_used: String,
   |         ^^^^^^^^^
   |
   = note: `ImportUsage` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: fields `semantic_bundler` and `module_id` are never read
   --> crates/cribo/src/visitors/import_discovery.rs:106:5
    |
96  | pub struct ImportDiscoveryVisitor<'a> {
    |            ---------------------- fields in this struct
...
106 |     semantic_bundler: Option<&'a SemanticBundler>,
    |     ^^^^^^^^^^^^^^^^
107 |     /// Current module ID if available
108 |     module_id: Option<ModuleId>,
    |     ^^^^^^^^^

Error: Failed to read file: "nonexistent_file.py"

Caused by:
    No such file or directory (os error 2)
