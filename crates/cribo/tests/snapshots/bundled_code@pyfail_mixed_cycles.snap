---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/pyfail_mixed_cycles/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import types
def get_base_value():
    """Function-level access is fine."""
    return BASE_VALUE
BASE_VALUE_constants_module = 42 * CONFIG_MULTIPLIER
constants_module = types.SimpleNamespace()
constants_module.get_base_value = get_base_value
constants_module.BASE_VALUE = BASE_VALUE_constants_module
def utility_function():
    """Another function that doesn't create a cycle."""
    return "utility"
def process_data_function_module(value):
    """Process data using helper from another module."""
    from helper_module import transform
    return transform(value) * 2
function_module = types.SimpleNamespace()
function_module.utility_function = utility_function
function_module.process_data = process_data_function_module
def transform(value):
    """Transform a value using another function."""
    from function_module import utility_function
    prefix = utility_function()
    return value + len(prefix)
helper_module = types.SimpleNamespace()
helper_module.transform = transform
BASE_VALUE = constants_module.BASE_VALUE
process_data = function_module.process_data
"""Test case with mixed resolvable and unresolvable circular dependencies."""
def main():
    print(f"Base value: {BASE_VALUE}")
    result = process_data(10)
    print(f"Processed: {result}")
if __name__ == "__main__":
    main()
if __name__ == "__main__":
    main()
