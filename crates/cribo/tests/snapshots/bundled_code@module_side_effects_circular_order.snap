---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/module_side_effects_circular_order/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import functools
import types
my_package = types.SimpleNamespace(__name__='my_package')
my_package_mod_c = types.SimpleNamespace(__name__='my_package.mod_c')
my_package.mod_c = my_package_mod_c
my_package_mod_l = types.SimpleNamespace(__name__='my_package.mod_l')
my_package.mod_l = my_package_mod_l
C_CONSTANT = 21
@functools.cache
def __cribo_init___cribo_c04dc3_my_package():
    __cribo_module = types.SimpleNamespace()
    __cribo_module.__name__ = 'my_package'
    my_package.mod_a = __cribo_init___cribo_e90488_my_package_mod_a()
    mod_a = my_package.mod_a
    __cribo_module.mod_a = mod_a
    TOP_LEVEL_VAL = mod_a.A_VALUE
    __cribo_module.TOP_LEVEL_VAL = TOP_LEVEL_VAL
    print(__cribo_module.TOP_LEVEL_VAL)
    __cribo_module.mod_l = my_package_mod_l
    __cribo_module.mod_c = my_package_mod_c
    return __cribo_module
@functools.cache
def __cribo_init___cribo_e90488_my_package_mod_a():
    __cribo_module = types.SimpleNamespace()
    __cribo_module.__name__ = 'my_package.mod_a'
    my_package.mod_b = __cribo_init___cribo_d862bd_my_package_mod_b()
    mod_b = my_package.mod_b
    __cribo_module.mod_b = mod_b
    A_VALUE = f"A -> {mod_b.B_DERIVED_VALUE}"
    __cribo_module.A_VALUE = A_VALUE
    return __cribo_module
@functools.cache
def __cribo_init___cribo_d862bd_my_package_mod_b():
    __cribo_module = types.SimpleNamespace()
    __cribo_module.__name__ = 'my_package.mod_b'
    mod_c = types.SimpleNamespace()
    __cribo_module.mod_c = mod_c
    mod_c.C_CONSTANT = C_CONSTANT
    B_DERIVED_VALUE = mod_c.C_CONSTANT * 2
    __cribo_module.B_DERIVED_VALUE = B_DERIVED_VALUE

    def get_b_value():
        return f"B using '{LEAF_VALUE}' and derived value '{B_DERIVED_VALUE}'"
    __cribo_module.get_b_value = get_b_value
    return __cribo_module
my_package.mod_a = __cribo_init___cribo_e90488_my_package_mod_a()
my_package.mod_b = __cribo_init___cribo_d862bd_my_package_mod_b()
__cribo_init_result = __cribo_init___cribo_c04dc3_my_package()
for attr in dir(__cribo_init_result):
    if not attr.startswith('_'):
        setattr(my_package, attr, getattr(__cribo_init_result, attr))
my_package_mod_c.C_CONSTANT = C_CONSTANT
__cribo_init_result = __cribo_init___cribo_c04dc3_my_package()
for attr in dir(__cribo_init_result):
    if not attr.startswith('_'):
        setattr(my_package, attr, getattr(__cribo_init_result, attr))
TOP_LEVEL_VAL = my_package.TOP_LEVEL_VAL
print(f"Result: {TOP_LEVEL_VAL}")
