---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/importlib_deduplication/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import types
def __cribo_init___cribo_75ebb7_package_submodule():
    module = types.SimpleNamespace()
    print("package/submodule.py is being executed!")
    sub_counter = 10
    module.sub_counter = sub_counter
    return module
def __cribo_init___cribo_20ca72_package():
    module = types.SimpleNamespace()
    print("package/__init__.py is being executed!")
    return module
def __cribo_init___cribo_26ef78_mymodule():
    module = types.SimpleNamespace()
    print("mymodule.py is being executed!")
    counter = 1
    module.counter = counter
    test_value = "Original"
    module.test_value = test_value
    return module
package = types.SimpleNamespace()
package.__name__ = 'package'
"""Test how importlib.import_module handles sys.modules and deduplication"""
print("=== Testing importlib.import_module deduplication ===\n")
mymodule = __cribo_init___cribo_26ef78_mymodule()
mymodule2 = mymodule
print(f"   Are they the same object? {mymodule is mymodule2}")
__cribo_init_result = __cribo_init___cribo_20ca72_package()
for attr in dir(__cribo_init_result):
    if not attr.startswith('_'):
        setattr(package, attr, getattr(__cribo_init_result, attr))
package.submodule = __cribo_init___cribo_75ebb7_package_submodule()
submodule = package.submodule
submodule2 = package.submodule
print(f"   Are they the same object? {submodule is submodule2}")
submodule3 = package.submodule
print(f"   Are they the same object? {submodule is submodule3}")
print("\n=== Testing modification propagation ===")
mymodule.test_value = "Modified!"
print(f"Set mymodule.test_value = 'Modified!'")
print(f"mymodule2.test_value = {mymodule2.test_value}")
mymodule_new = mymodule
print(f"After reimport mymodule_new.counter = {mymodule_new.counter}")
print(f"Are they the same object? {mymodule is mymodule_new}")
print(f"Original mymodule still has counter = {mymodule.counter}")
