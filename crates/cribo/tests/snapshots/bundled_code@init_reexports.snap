---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/bundling/init_reexports/main.py
---
import os
import sys, types
def __cribo_init___cribo_f6dfc4_mypackage_utils_constants():
    if '__cribo_f6dfc4_mypackage_utils_constants' in sys.modules:
        return sys.modules['__cribo_f6dfc4_mypackage_utils_constants']
    module = types.ModuleType('__cribo_f6dfc4_mypackage_utils_constants')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/utils/constants.py'
    sys.modules['__cribo_f6dfc4_mypackage_utils_constants'] = module
    sys.modules['mypackage.utils.constants'] = module
    """Constants module."""
    MAX_ITEMS = 100
    module.MAX_ITEMS = MAX_ITEMS
    DEFAULT_VALUE = "default"
    module.DEFAULT_VALUE = DEFAULT_VALUE
    return module
def __cribo_init___cribo_bf58d0_mypackage_utils_helper():
    if '__cribo_bf58d0_mypackage_utils_helper' in sys.modules:
        return sys.modules['__cribo_bf58d0_mypackage_utils_helper']
    module = types.ModuleType('__cribo_bf58d0_mypackage_utils_helper')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/utils/helper.py'
    sys.modules['__cribo_bf58d0_mypackage_utils_helper'] = module
    sys.modules['mypackage.utils.helper'] = module
    """Helper utilities."""

    def helper_function(data):
        """Helper function for processing data."""
        return f"Helped: {data}"
    module.helper_function = helper_function
    return module
def __cribo_init___cribo_fbc73e_mypackage_config():
    if '__cribo_fbc73e_mypackage_config' in sys.modules:
        return sys.modules['__cribo_fbc73e_mypackage_config']
    module = types.ModuleType('__cribo_fbc73e_mypackage_config')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/config.py'
    sys.modules['__cribo_fbc73e_mypackage_config'] = module
    sys.modules['mypackage.config'] = module
    """Configuration module."""
    import os
    module.os = os

    class Config:
        """Configuration class."""

        def __init__(self):
            self.DEBUG = os.environ.get("DEBUG", "false").lower() == "true"
            self.LOG_LEVEL = os.environ.get("LOG_LEVEL", "INFO")
    module.Config = Config
    config = Config()
    module.config = config
    return module
def __cribo_init___cribo_dc4b98_mypackage_formatter():
    if '__cribo_dc4b98_mypackage_formatter' in sys.modules:
        return sys.modules['__cribo_dc4b98_mypackage_formatter']
    module = types.ModuleType('__cribo_dc4b98_mypackage_formatter')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/formatter.py'
    sys.modules['__cribo_dc4b98_mypackage_formatter'] = module
    sys.modules['mypackage.formatter'] = module
    """Data formatting module."""

    def format_data(data):
        """Format the processed data."""
        return f"Formatted: {data}"
    module.format_data = format_data
    return module
def __cribo_init___cribo_3992ed_mypackage_data_processor():
    if '__cribo_3992ed_mypackage_data_processor' in sys.modules:
        return sys.modules['__cribo_3992ed_mypackage_data_processor']
    module = types.ModuleType('__cribo_3992ed_mypackage_data_processor')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/data_processor.py'
    sys.modules['__cribo_3992ed_mypackage_data_processor'] = module
    sys.modules['mypackage.data_processor'] = module
    """Data processing module."""

    def process_data(data):
        """Process the input data."""
        processed = data.copy()
        processed["processed"] = True
        return processed
    module.process_data = process_data
    return module
def __cribo_init___cribo_1af1ed_mypackage_utils():
    if '__cribo_1af1ed_mypackage_utils' in sys.modules:
        return sys.modules['__cribo_1af1ed_mypackage_utils']
    module = types.ModuleType('__cribo_1af1ed_mypackage_utils')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/utils/__init__.py'
    sys.modules['__cribo_1af1ed_mypackage_utils'] = module
    sys.modules['mypackage.utils'] = module
    """Utils subpackage with re-exports."""
    helper_function = sys.modules['mypackage.utils.helper'].helper_function
    module.helper_function = helper_function
    MAX_ITEMS = sys.modules['mypackage.utils.constants'].MAX_ITEMS
    DEFAULT_VALUE = sys.modules['mypackage.utils.constants'].DEFAULT_VALUE
    module.MAX_ITEMS = MAX_ITEMS
    module.DEFAULT_VALUE = DEFAULT_VALUE
    __all__ = ["helper_function", "MAX_ITEMS", "DEFAULT_VALUE"]
    module.__all__ = ['helper_function', 'MAX_ITEMS', 'DEFAULT_VALUE']
    return module
def __cribo_init___cribo_d70f30_mypackage():
    if '__cribo_d70f30_mypackage' in sys.modules:
        return sys.modules['__cribo_d70f30_mypackage']
    module = types.ModuleType('__cribo_d70f30_mypackage')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/init_reexports/mypackage/__init__.py'
    sys.modules['__cribo_d70f30_mypackage'] = module
    sys.modules['mypackage'] = module
    """\nPackage initialization with re-exports.\n\nThis __init__.py demonstrates the pattern where imports are made but not directly used\nwithin this file - they are re-exports for the package interface.\nThese imports should NOT be stripped as unused, even though they don't appear\nto be used within this file itself.\n"""
    process_data = sys.modules['mypackage.data_processor'].process_data
    module.process_data = process_data
    format_data = sys.modules['mypackage.formatter'].format_data
    module.format_data = format_data
    config = sys.modules['mypackage.config'].config
    module.config = config
    helper_function = sys.modules['mypackage.utils'].helper_function
    module.helper_function = helper_function
    __version__ = "1.0.0"
    module.__version__ = __version__
    __all__ = ["process_data", "format_data", "config", "helper_function", "__version__"]
    DEBUG_MODE = config.DEBUG
    module.__all__ = ['process_data', 'format_data', 'config', 'helper_function', '__version__']
    return module
__cribo_modules = {'mypackage.utils.constants': '__cribo_f6dfc4_mypackage_utils_constants', 'mypackage.utils.helper': '__cribo_bf58d0_mypackage_utils_helper', 'mypackage.config': '__cribo_fbc73e_mypackage_config', 'mypackage.formatter': '__cribo_dc4b98_mypackage_formatter', 'mypackage.data_processor': '__cribo_3992ed_mypackage_data_processor', 'mypackage.utils': '__cribo_1af1ed_mypackage_utils', 'mypackage': '__cribo_d70f30_mypackage'}
__cribo_init_functions = {'__cribo_f6dfc4_mypackage_utils_constants': __cribo_init___cribo_f6dfc4_mypackage_utils_constants, '__cribo_bf58d0_mypackage_utils_helper': __cribo_init___cribo_bf58d0_mypackage_utils_helper, '__cribo_fbc73e_mypackage_config': __cribo_init___cribo_fbc73e_mypackage_config, '__cribo_dc4b98_mypackage_formatter': __cribo_init___cribo_dc4b98_mypackage_formatter, '__cribo_3992ed_mypackage_data_processor': __cribo_init___cribo_3992ed_mypackage_data_processor, '__cribo_1af1ed_mypackage_utils': __cribo_init___cribo_1af1ed_mypackage_utils, '__cribo_d70f30_mypackage': __cribo_init___cribo_d70f30_mypackage}
class CriboBundledFinder:

    def __init__(self, module_registry, init_functions):
        self.module_registry = module_registry
        self.init_functions = init_functions

    def find_spec(self, fullname, path, target=None):
        if fullname in self.module_registry:
            synthetic_name = self.module_registry[fullname]
            if synthetic_name not in sys.modules:
                init_func = self.init_functions.get(synthetic_name)
                if init_func:
                    init_func()
            import importlib.util
            return importlib.util.find_spec(synthetic_name)
        return None
sys.meta_path.insert(0, CriboBundledFinder(__cribo_modules, __cribo_init_functions))
__cribo_init___cribo_f6dfc4_mypackage_utils_constants()
__cribo_init___cribo_bf58d0_mypackage_utils_helper()
__cribo_init___cribo_fbc73e_mypackage_config()
__cribo_init___cribo_dc4b98_mypackage_formatter()
__cribo_init___cribo_3992ed_mypackage_data_processor()
__cribo_init___cribo_1af1ed_mypackage_utils()
__cribo_init___cribo_d70f30_mypackage()
'''\nTest script demonstrating __init__.py re-export preservation.\n\nThis fixture tests that imports in __init__.py files are preserved even if they\nappear "unused" within that file, as they are typically re-exports for the package interface.\n'''
format_data = sys.modules['mypackage'].format_data
process_data = sys.modules['mypackage'].process_data
config = sys.modules['mypackage'].config
helper_function = sys.modules['mypackage.utils'].helper_function
def main():
    """Main function demonstrating usage of re-exported functions."""
    data = {"name": "test", "value": 42}
    processed = process_data(data)
    formatted = format_data(processed)
    result = helper_function(formatted)
    if config.DEBUG:
        print(f"Debug: {result}")
    else:
        print(result)
if __name__ == "__main__":
    main()
