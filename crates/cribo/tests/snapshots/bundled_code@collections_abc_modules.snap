---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/collections_abc_modules/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

from collections import OrderedDict
from collections.abc import Mapping, MutableMapping
import types
def process_mapping(data):
    """Process a mapping object."""
    if isinstance(data, MutableMapping):
        return f"Mutable mapping with {len(data)} items"
    elif isinstance(data, Mapping):
        return f"Immutable mapping with {len(data)} items"
    else:
        return "Not a mapping"
"""Helper module using collections.abc."""
"""Test case for collections.abc imports hoisting with modules."""
helper = types.SimpleNamespace()
helper.__all__ = ['process_mapping']
helper.process_mapping = process_mapping
def main():
    od = OrderedDict()
    od['a'] = 1
    od['b'] = 2
    result = helper.process_mapping(od)
    print(f"Result: {result}")
    print(f"OrderedDict is MutableMapping: {isinstance(od, MutableMapping)}")
if __name__ == "__main__":
    main()
