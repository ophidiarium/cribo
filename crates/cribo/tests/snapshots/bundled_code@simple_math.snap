---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/bundling/simple_math/main.py
---
import sys, types
def __cribo_init___cribo_f407c7_calculator():
    if '__cribo_f407c7_calculator' in sys.modules:
        return sys.modules['__cribo_f407c7_calculator']
    module = types.ModuleType('__cribo_f407c7_calculator')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/simple_math/calculator.py'
    sys.modules['__cribo_f407c7_calculator'] = module
    sys.modules['calculator'] = module

    def add(a, b):
        """Add two numbers."""
        return a + b
    module.add = add

    def multiply(a, b):
        """Multiply two numbers."""
        return a * b
    module.multiply = multiply
    return module
def __cribo_init___cribo_537d25_utils():
    if '__cribo_537d25_utils' in sys.modules:
        return sys.modules['__cribo_537d25_utils']
    module = types.ModuleType('__cribo_537d25_utils')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/simple_math/utils.py'
    sys.modules['__cribo_537d25_utils'] = module
    sys.modules['utils'] = module

    def format_result(operation, result):
        """Format operation result for display."""
        return f"{operation}: {result}"
    module.format_result = format_result
    return module
__cribo_modules = {'calculator': '__cribo_f407c7_calculator', 'utils': '__cribo_537d25_utils'}
__cribo_init_functions = {'__cribo_f407c7_calculator': __cribo_init___cribo_f407c7_calculator, '__cribo_537d25_utils': __cribo_init___cribo_537d25_utils}
class CriboBundledFinder:

    def __init__(self, module_registry, init_functions):
        self.module_registry = module_registry
        self.init_functions = init_functions

    def find_spec(self, fullname, path, target=None):
        if fullname in self.module_registry:
            synthetic_name = self.module_registry[fullname]
            if synthetic_name not in sys.modules:
                init_func = self.init_functions.get(synthetic_name)
                if init_func:
                    init_func()
            import importlib.util
            return importlib.util.find_spec(synthetic_name)
        return None
sys.meta_path.insert(0, CriboBundledFinder(__cribo_modules, __cribo_init_functions))
__cribo_init___cribo_f407c7_calculator()
__cribo_init___cribo_537d25_utils()
add = sys.modules['calculator'].add
multiply = sys.modules['calculator'].multiply
format_result = sys.modules['utils'].format_result
def main():
    result1 = add(5, 3)
    result2 = multiply(4, 7)
    print(format_result("Addition", result1))
    print(format_result("Multiplication", result2))
if __name__ == "__main__":
    main()
