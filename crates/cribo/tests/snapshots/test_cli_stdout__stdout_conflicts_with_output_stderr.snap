---
source: crates/cribo/tests/test_cli_stdout.rs
expression: stderr
---
warning: struct `NamespaceImportParams` is never constructed
  --> crates/cribo/src/code_generator.rs:61:8
   |
61 | struct NamespaceImportParams<'a> {
   |        ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: struct `InlinedImportParams` is never constructed
  --> crates/cribo/src/code_generator.rs:76:8
   |
76 | struct InlinedImportParams<'a> {
   |        ^^^^^^^^^^^^^^^^^^^

warning: struct `AddSymbolsParams` is never constructed
  --> crates/cribo/src/code_generator.rs:83:8
   |
83 | struct AddSymbolsParams<'a> {
   |        ^^^^^^^^^^^^^^^^

warning: struct `SymbolImportParams` is never constructed
  --> crates/cribo/src/code_generator.rs:97:8
   |
97 | struct SymbolImportParams<'a> {
   |        ^^^^^^^^^^^^^^^^^^

warning: fields `is_function`, `is_class`, `is_assignment`, and `depends_on` are never read
   --> crates/cribo/src/code_generator.rs:141:5
    |
139 | struct SymbolDefinition {
    |        ---------------- fields in this struct
140 |     /// Whether this is a function definition
141 |     is_function: bool,
    |     ^^^^^^^^^^^
142 |     /// Whether this is a class definition
143 |     is_class: bool,
    |     ^^^^^^^^
144 |     /// Whether this is an assignment
145 |     is_assignment: bool,
    |     ^^^^^^^^^^^^^
146 |     /// Dependencies this symbol has on other symbols
147 |     depends_on: Vec<(String, String)>,
    |     ^^^^^^^^^^
    |
    = note: `SymbolDefinition` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: fields `entry_created_namespaces`, `created_namespace_modules`, and `needs_types_for_direct_imports` are never read
    --> crates/cribo/src/code_generator.rs:1195:5
     |
1164 | pub struct HybridStaticBundler {
     |            ------------------- fields in this struct
...
1195 |     entry_created_namespaces: FxIndexSet<String>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^
...
1198 |     created_namespace_modules: FxIndexSet<String>,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1202 |     needs_types_for_direct_imports: bool,
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `is_in_circular_dependency` is never used
    --> crates/cribo/src/code_generator.rs:1260:8
     |
1215 | impl HybridStaticBundler {
     | ------------------------ associated function in this implementation
...
1260 |     fn is_in_circular_dependency(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
    --> crates/cribo/src/code_generator.rs:5340:8
     |
5291 | impl HybridStaticBundler {
     | ------------------------ associated items in this implementation
...
5340 |     fn collect_module_symbol(&self, stmt: &Stmt, symbols: &mut Vec<String>) {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
5488 |     fn add_imported_symbol_attributes(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
5847 |     fn handle_inlined_module_import(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
5977 |     fn check_if_importing_module(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
6000 |     fn create_namespace_for_inlined_module(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6060 |     fn add_symbols_to_namespace(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
6105 |     fn add_symbol_to_namespace(
     |        ^^^^^^^^^^^^^^^^^^^^^^^
...
6133 |     fn handle_symbol_import_from_inlined_module(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6319 |     fn find_modules_with_function_imports(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6337 |     fn module_has_function_scoped_imports(&self, ast: &ModModule) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
6359 |     fn class_has_method_imports(&self, class_def: &StmtClassDef) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
6366 |     fn function_has_imports(body: &[Stmt]) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^
...
6678 |     fn find_function_imported_modules(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7199 |     fn transform_function_body_for_renames(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7210 |     fn transform_stmt_for_renames(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7292 |     fn rename_references_in_expr(expr: &mut Expr, module_renames: &FxIndexMap<String, String>) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
7488 |     fn process_wrapper_module_import(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
7735 |     fn track_import_aliases(
     |        ^^^^^^^^^^^^^^^^^^^^
...
7791 |     fn get_actual_import_name(
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
8323 |     fn rewrite_import_entry_module(&mut self, import_stmt: StmtImport) -> Vec<Stmt> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
8454 |     fn handle_dotted_import_attribute(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
8476 |     fn create_parent_namespaces_entry_module(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
8578 |     fn create_namespace_keywords(&self, full_module_path: &str, inlined_key: &str) -> Vec<Keyword> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
8671 |     fn create_module_assignment(&self, final_body: &mut Vec<Stmt>, module: &str) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
8689 |     fn assignment_has_dotted_target(&self, assign: &StmtAssign, parent: &str, attr: &str) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
8700 |     fn is_module_already_assigned(&self, final_body: &[Stmt], module: &str) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
8728 |     fn is_name_chain(&self, expr: &Expr, expected_chain: &str) -> bool {
     |        ^^^^^^^^^^^^^
...
9422 |     fn create_namespace_object_for_direct_import(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `location`, `context`, and `name_used` are never read
  --> crates/cribo/src/visitors/import_discovery.rs:37:9
   |
35 | pub struct ImportUsage {
   |            ----------- fields in this struct
36 |     /// Where the name was used
37 |     pub location: TextRange,
   |         ^^^^^^^^
38 |     /// In what execution context
39 |     pub context: ExecutionContext,
   |         ^^^^^^^
40 |     /// The actual name used (might be aliased)
41 |     pub name_used: String,
   |         ^^^^^^^^^
   |
   = note: `ImportUsage` has derived impls for the traits `Debug` and `Clone`, but these are intentionally ignored during dead code analysis

warning: fields `semantic_bundler` and `module_id` are never read
   --> crates/cribo/src/visitors/import_discovery.rs:106:5
    |
96  | pub struct ImportDiscoveryVisitor<'a> {
    |            ---------------------- fields in this struct
...
106 |     semantic_bundler: Option<&'a SemanticBundler>,
    |     ^^^^^^^^^^^^^^^^
107 |     /// Current module ID if available
108 |     module_id: Option<ModuleId>,
    |     ^^^^^^^^^

error: the argument '--output <OUTPUT>' cannot be used with '--stdout'

Usage: cribo --entry <ENTRY> --output <OUTPUT>

For more information, try '--help'.
