---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/cross_module_attribute_import/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import types
import functools as _cribo_functools
import types as _cribo_types
_cribo = _cribo_types.SimpleNamespace(__name__='_cribo', functools=_cribo_functools, types=_cribo_types)
mypackage = _cribo.types.SimpleNamespace(__name__='mypackage')
@_cribo.functools.cache
def _cribo_init___cribo_35f1d1_mypackage_utils():
    _cribo_module = _cribo.types.SimpleNamespace()
    _cribo_module.__name__ = 'mypackage.utils'
    """Utils module that imports from __version__ module and uses it at module level."""
    _cribo_module.__version__ = __version__
    VERSION_PREFIX = f"v{__version__}"
    _cribo_module.VERSION_PREFIX = VERSION_PREFIX

    def get_version_info():
        """Return version information using the imported __version__ variable."""
        return _cribo_module.VERSION_PREFIX
    _cribo_module.get_version_info = get_version_info
    return _cribo_module
__version__ = "1.0.0"
def get_full_info():
    """Combine version and processed data."""
    return f"{mypackage.utils.get_version_info()} - {process_data()}"
def process_data():
    """Process some data."""
    return "Processed Data"
"""Package init that creates circular dependency."""
"""Core module that creates circular dependency."""
"""Version information module."""
mypackage.get_full_info = get_full_info
mypackage_core = _cribo.types.SimpleNamespace(__name__='mypackage.core')
mypackage.core = mypackage_core
mypackage___version__ = _cribo.types.SimpleNamespace(__name__='mypackage.__version__')
mypackage.__version__ = mypackage___version__
mypackage.utils = _cribo_init___cribo_35f1d1_mypackage_utils()
mypackage_core.process_data = process_data
mypackage___version__.__version__ = __version__
"""Test cross-module attribute import with circular dependencies that require init functions."""
print(mypackage.get_full_info())
