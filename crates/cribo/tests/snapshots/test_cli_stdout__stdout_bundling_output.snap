---
source: crates/cribo/tests/test_cli_stdout.rs
expression: stdout
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

from dataclasses import dataclass
from typing import Optional
import os
import sys
from typing import Union
import sys, types
def __cribo_init___cribo_7e7ea0_models_user():
    if '__cribo_7e7ea0_models_user' in sys.modules:
        return sys.modules['__cribo_7e7ea0_models_user']
    module = types.ModuleType('__cribo_7e7ea0_models_user')
    module.__file__ = '<WORKSPACE>
    sys.modules['__cribo_7e7ea0_models_user'] = module
    sys.modules['models.user'] = module
    """User model for the test project."""
    from dataclasses import dataclass
    module.dataclass = dataclass
    from typing import Optional
    module.Optional = Optional

    @dataclass
    class User:
        """A simple user model."""
        name: str
        age: int
        email: Optional[str] = None

        def is_adult(self) -> bool:
            """Check if the user is an adult."""
            return self.age >= 18

        def get_display_name(self) -> str:
            """Get a display name for the user."""
            if self.email:
                return f"{self.name} <{self.email}>"
            return self.name
    module.User = User
    return module
def __cribo_init___cribo_4d7035_models():
    if '__cribo_4d7035_models' in sys.modules:
        return sys.modules['__cribo_4d7035_models']
    module = types.ModuleType('__cribo_4d7035_models')
    module.__file__ = '<WORKSPACE>
    sys.modules['__cribo_4d7035_models'] = module
    sys.modules['models'] = module
    """Models package initialization."""
    User = sys.modules['models.user'].User
    module.User = User
    __all__ = ["User"]
    module.__all__ = ['User']
    return module
def __cribo_init___cribo_0f859f_utils_helpers():
    if '__cribo_0f859f_utils_helpers' in sys.modules:
        return sys.modules['__cribo_0f859f_utils_helpers']
    module = types.ModuleType('__cribo_0f859f_utils_helpers')
    module.__file__ = '<WORKSPACE>
    sys.modules['__cribo_0f859f_utils_helpers'] = module
    sys.modules['utils.helpers'] = module
    """Utility functions for the test project."""
    import os
    module.os = os
    import sys
    module.sys = sys
    from typing import Union
    module.Union = Union

    def greet(name: str) -> str:
        """Greet a person by name."""
        return f"Hello, {name}!"
    module.greet = greet

    def calculate(a: Union[int, float], b: Union[int, float]) -> Union[int, float]:
        """Calculate the sum of two numbers."""
        return a + b
    module.calculate = calculate

    def get_system_info() -> dict:
        """Get basic system information."""
        return {"platform": sys.platform, "python_version": sys.version, "cwd": os.getcwd()}
    module.get_system_info = get_system_info
    return module
def __cribo_init___cribo_1a44e2_utils():
    if '__cribo_1a44e2_utils' in sys.modules:
        return sys.modules['__cribo_1a44e2_utils']
    module = types.ModuleType('__cribo_1a44e2_utils')
    module.__file__ = '<WORKSPACE>
    sys.modules['__cribo_1a44e2_utils'] = module
    sys.modules['utils'] = module
    """Utils package initialization."""
    greet = sys.modules['utils.helpers'].greet
    calculate = sys.modules['utils.helpers'].calculate
    get_system_info = sys.modules['utils.helpers'].get_system_info
    module.greet = greet
    module.calculate = calculate
    module.get_system_info = get_system_info
    __all__ = ["greet", "calculate", "get_system_info"]
    module.__all__ = ['greet', 'calculate', 'get_system_info']
    return module
__cribo_modules = {'models.user': '__cribo_7e7ea0_models_user', 'models': '__cribo_4d7035_models', 'utils.helpers': '__cribo_0f859f_utils_helpers', 'utils': '__cribo_1a44e2_utils'}
__cribo_init_functions = {'__cribo_7e7ea0_models_user': __cribo_init___cribo_7e7ea0_models_user, '__cribo_4d7035_models': __cribo_init___cribo_4d7035_models, '__cribo_0f859f_utils_helpers': __cribo_init___cribo_0f859f_utils_helpers, '__cribo_1a44e2_utils': __cribo_init___cribo_1a44e2_utils}
class CriboBundledFinder:

    def __init__(self, module_registry, init_functions):
        self.module_registry = module_registry
        self.init_functions = init_functions

    def find_spec(self, fullname, path, target=None):
        if fullname in self.module_registry:
            synthetic_name = self.module_registry[fullname]
            if synthetic_name not in sys.modules:
                init_func = self.init_functions.get(synthetic_name)
                if init_func:
                    init_func()
            import importlib.util
            return importlib.util.find_spec(synthetic_name)
        return None
sys.meta_path.insert(0, CriboBundledFinder(__cribo_modules, __cribo_init_functions))
__cribo_init___cribo_7e7ea0_models_user()
__cribo_init___cribo_4d7035_models()
__cribo_init___cribo_0f859f_utils_helpers()
__cribo_init___cribo_1a44e2_utils()
"""Simple test project entry point."""
greet = sys.modules['utils.helpers'].greet
calculate = sys.modules['utils.helpers'].calculate
User = sys.modules['models.user'].User
def main():
    """Main function."""
    user = User("Alice", 30)
    print(greet(user.name))
    result = calculate(10, 20)
    print(f"Calculation result: {result}")
    print(f"User: {user.name}, Age: {user.age}")
if __name__ == "__main__":
    main()
