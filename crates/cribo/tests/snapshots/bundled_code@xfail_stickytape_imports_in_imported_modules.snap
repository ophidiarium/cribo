---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/bundling/xfail_stickytape_imports_in_imported_modules/main.py
---
import sys, types
def __cribo_init___cribo_faabd2_greetings_english():
    if '__cribo_faabd2_greetings_english' in sys.modules:
        return sys.modules['__cribo_faabd2_greetings_english']
    module = types.ModuleType('__cribo_faabd2_greetings_english')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/xfail_stickytape_imports_in_imported_modules/greetings/english.py'
    sys.modules['__cribo_faabd2_greetings_english'] = module
    sys.modules['greetings.english'] = module
    message = "Hello"
    module.message = message
    return module
def __cribo_init___cribo_ac9dd6_greetings():
    if '__cribo_ac9dd6_greetings' in sys.modules:
        return sys.modules['__cribo_ac9dd6_greetings']
    module = types.ModuleType('__cribo_ac9dd6_greetings')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/xfail_stickytape_imports_in_imported_modules/greetings/__init__.py'
    sys.modules['__cribo_ac9dd6_greetings'] = module
    sys.modules['greetings'] = module
    message = sys.modules['greetings.english'].message
    module.message = message
    return module
__cribo_modules = {'greetings.english': '__cribo_faabd2_greetings_english', 'greetings': '__cribo_ac9dd6_greetings'}
__cribo_init_functions = {'__cribo_faabd2_greetings_english': __cribo_init___cribo_faabd2_greetings_english, '__cribo_ac9dd6_greetings': __cribo_init___cribo_ac9dd6_greetings}
class CriboBundledFinder:

    def __init__(self, module_registry, init_functions):
        self.module_registry = module_registry
        self.init_functions = init_functions

    def find_spec(self, fullname, path, target=None):
        if fullname in self.module_registry:
            synthetic_name = self.module_registry[fullname]
            if synthetic_name not in sys.modules:
                init_func = self.init_functions.get(synthetic_name)
                if init_func:
                    init_func()
            import importlib.util
            return importlib.util.find_spec(synthetic_name)
        return None
sys.meta_path.insert(0, CriboBundledFinder(__cribo_modules, __cribo_init_functions))
__cribo_init___cribo_faabd2_greetings_english()
__cribo_init___cribo_ac9dd6_greetings()
message = sys.modules['greetings'].message
print(message)
