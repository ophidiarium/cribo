---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/xfail_all_variable_handling/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import types
__all___simple_module = ["public_func", "CONSTANT"]
def _private_func():
    """A private function that should not be exported."""
    return "This is private"
def public_func_simple_module():
    """A public function that should be exported."""
    return "Hello from public_func"
simple_module = types.SimpleNamespace()
simple_module.public_func = public_func_simple_module
SHARED_NAME = "conflict_module_version"
conflict_module = types.SimpleNamespace()
conflict_module.SHARED_NAME = SHARED_NAME
__all__ = ["exported_from_init", "sub_function"]
nested_package = types.SimpleNamespace()
__all___nested_package_submodule = ["sub_function", "SUB_CONSTANT"]
def _private_sub_func():
    """Private function in submodule"""
    return "private submodule function"
def sub_function_nested_package_submodule():
    """Function from submodule"""
    return "Hello from submodule"
sub = types.SimpleNamespace()
sub.sub_function = sub_function_nested_package_submodule
public_func = simple_module.public_func
CONSTANT = simple_module.CONSTANT
message = conflict_module.message
sub_function = sub.sub_function
exported_from_init = nested_package.exported_from_init
print("Testing simple module exports:")
print(f"public_func() = {public_func()}")
print(f"CONSTANT = {CONSTANT}")
print("\nTesting nested package exports:")
print(f"exported_from_init() = {exported_from_init()}")
print(f"sub_function() = {sub_function()}")
print("\nTesting conflict resolution:")
print(f"message = {message}")
print(f"\n'public_func' in simple_module.__all__ = {'public_func' in simple_module.__all__}")
print(f"'CONSTANT' in simple_module.__all__ = {'CONSTANT' in simple_module.__all__}")
print(f"\n'sub_function' in submodule.__all__ = {'sub_function' in sub.__all__}")
