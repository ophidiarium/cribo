---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/bundling/future_imports_multiple/main.py
---
from __future__ import annotations
from __future__ import division
from __future__ import print_function
import sys, types
def __cribo_init___cribo_810ac6_module_a():
    if '__cribo_810ac6_module_a' in sys.modules:
        return sys.modules['__cribo_810ac6_module_a']
    module = types.ModuleType('__cribo_810ac6_module_a')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/future_imports_multiple/module_a.py'
    sys.modules['__cribo_810ac6_module_a'] = module
    sys.modules['module_a'] = module

    def func_a():
        print("Function A")
    module.func_a = func_a
    return module
def __cribo_init___cribo_826c6f_module_b():
    if '__cribo_826c6f_module_b' in sys.modules:
        return sys.modules['__cribo_826c6f_module_b']
    module = types.ModuleType('__cribo_826c6f_module_b')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/future_imports_multiple/module_b.py'
    sys.modules['__cribo_826c6f_module_b'] = module
    sys.modules['module_b'] = module

    def func_b():
        print("Function B")
    module.func_b = func_b
    return module
__cribo_modules = {'module_a': '__cribo_810ac6_module_a', 'module_b': '__cribo_826c6f_module_b'}
__cribo_init_functions = {'__cribo_810ac6_module_a': __cribo_init___cribo_810ac6_module_a, '__cribo_826c6f_module_b': __cribo_init___cribo_826c6f_module_b}
class CriboBundledFinder:

    def __init__(self, module_registry, init_functions):
        self.module_registry = module_registry
        self.init_functions = init_functions

    def find_spec(self, fullname, path, target=None):
        if fullname in self.module_registry:
            synthetic_name = self.module_registry[fullname]
            if synthetic_name not in sys.modules:
                init_func = self.init_functions.get(synthetic_name)
                if init_func:
                    init_func()
            import importlib.util
            return importlib.util.find_spec(synthetic_name)
        return None
sys.meta_path.insert(0, CriboBundledFinder(__cribo_modules, __cribo_init_functions))
__cribo_init___cribo_810ac6_module_a()
__cribo_init___cribo_826c6f_module_b()
func_a = sys.modules['module_a'].func_a
func_b = sys.modules['module_b'].func_b
def main():
    func_a()
    func_b()
if __name__ == "__main__":
    main()
