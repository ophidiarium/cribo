---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/pyfail_unresolvable_patterns/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import functools
import types
@functools.cache
def __cribo_init___cribo_be18fb_constants_a():
    module = types.SimpleNamespace()
    module.__name__ = 'constants_a'
    constants_b = __cribo_init___cribo_3822ea_constants_b()
    B_VALUE = constants_b.B_VALUE
    module.B_VALUE = B_VALUE
    A_VALUE = B_VALUE + 1
    module.A_VALUE = A_VALUE

    def get_a_multiplier():
        return 10
    module.get_a_multiplier = get_a_multiplier
    return module
@functools.cache
def __cribo_init___cribo_3822ea_constants_b():
    module = types.SimpleNamespace()
    module.__name__ = 'constants_b'
    constants_a = __cribo_init___cribo_be18fb_constants_a()
    A_VALUE = constants_a.A_VALUE
    module.A_VALUE = A_VALUE
    B_VALUE = A_VALUE * 2
    module.B_VALUE = B_VALUE

    def get_b_multiplier():
        return 20
    module.get_b_multiplier = get_b_multiplier
    return module
constants_a = __cribo_init___cribo_be18fb_constants_a()
def main():
    print(f"A_VALUE: {constants_a.A_VALUE}")
if __name__ == "__main__":
    main()
