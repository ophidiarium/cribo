---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/pyfail_class_level_cycles/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

"""Test case with class-level circular dependencies."""
def main():
    user = User("Alice")
    admin = Admin("Bob")
    print(f"User: {user.name}")
    print(f"Admin: {admin.name}")
from user_class import User
if __name__ == "__main__":
    main()
if __name__ == "__main__":
    main()
from admin_class import Admin
"""Admin class module with circular dependency."""
class Admin(User):
    """Admin class that inherits from User."""

    def __init__(self, name):
        super().__init__(name)
        self.is_admin = True

    def demote_to_user(self):
        """Demote admin to regular user."""
        return User(self.name)
from user_class import User
class Admin(User):
    """Admin class that inherits from User."""

    def __init__(self, name):
        super().__init__(name)
        self.is_admin = True

    def demote_to_user(self):
        """Demote admin to regular user."""
        return User(self.name)
class Admin(User):
    """Admin class that inherits from User."""

    def __init__(self, name):
        super().__init__(name)
        self.is_admin = True

    def demote_to_user(self):
        """Demote admin to regular user."""
        return User(self.name)
class Admin(User):
    """Admin class that inherits from User."""

    def __init__(self, name):
        super().__init__(name)
        self.is_admin = True

    def demote_to_user(self):
        """Demote admin to regular user."""
        return User(self.name)
"""User class module with circular dependency."""
class User:
    """User class that references Admin class."""

    def __init__(self, name):
        self.name = name
        self.admin_reference = Admin

    def promote_to_admin(self):
        """Promote user to admin."""
        return self.admin_reference(self.name)
from admin_class import Admin
class User:
    """User class that references Admin class."""

    def __init__(self, name):
        self.name = name
        self.admin_reference = Admin

    def promote_to_admin(self):
        """Promote user to admin."""
        return self.admin_reference(self.name)
class User:
    """User class that references Admin class."""

    def __init__(self, name):
        self.name = name
        self.admin_reference = Admin

    def promote_to_admin(self):
        """Promote user to admin."""
        return self.admin_reference(self.name)
class User:
    """User class that references Admin class."""

    def __init__(self, name):
        self.name = name
        self.admin_reference = Admin

    def promote_to_admin(self):
        """Promote user to admin."""
        return self.admin_reference(self.name)
