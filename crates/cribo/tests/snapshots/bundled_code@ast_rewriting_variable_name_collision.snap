---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/bundling/ast_rewriting_variable_name_collision/main.py
---
import sys, types
def __cribo_init___cribo_35664f_constants():
    if '__cribo_35664f_constants' in sys.modules:
        return sys.modules['__cribo_35664f_constants']
    module = types.ModuleType('__cribo_35664f_constants')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/ast_rewriting_variable_name_collision/constants.py'
    sys.modules['__cribo_35664f_constants'] = module
    sys.modules['constants'] = module
    """\nConstants module with global variables.\nThese will conflict with config.py when bundled.\n"""
    API_URL = "https://api.constants.com"
    module.API_URL = API_URL
    VERSION = "1.0.0"
    module.VERSION = VERSION
    DEFAULT_TIMEOUT = 30
    module.DEFAULT_TIMEOUT = DEFAULT_TIMEOUT
    MAX_CONNECTIONS = 100
    module.MAX_CONNECTIONS = MAX_CONNECTIONS
    RETRY_DELAY = 5
    module.RETRY_DELAY = RETRY_DELAY
    return module
def __cribo_init___cribo_2092b2_config():
    if '__cribo_2092b2_config' in sys.modules:
        return sys.modules['__cribo_2092b2_config']
    module = types.ModuleType('__cribo_2092b2_config')
    module.__file__ = '/Volumes/workplace/GitHub/ophidiarium/cribo/crates/cribo/tests/fixtures/bundling/ast_rewriting_variable_name_collision/config.py'
    sys.modules['__cribo_2092b2_config'] = module
    sys.modules['config'] = module
    """\nConfig module with global variables.\nThese will conflict with constants.py when bundled.\n"""
    API_URL = "https://api.config.com"
    module.API_URL = API_URL
    VERSION = "2.1.0"
    module.VERSION = VERSION
    MAX_RETRIES = 3
    module.MAX_RETRIES = MAX_RETRIES
    CACHE_SIZE = 1000
    module.CACHE_SIZE = CACHE_SIZE
    return module
__cribo_modules = {'constants': '__cribo_35664f_constants', 'config': '__cribo_2092b2_config'}
__cribo_init_functions = {'__cribo_35664f_constants': __cribo_init___cribo_35664f_constants, '__cribo_2092b2_config': __cribo_init___cribo_2092b2_config}
class CriboBundledFinder:

    def __init__(self, module_registry, init_functions):
        self.module_registry = module_registry
        self.init_functions = init_functions

    def find_spec(self, fullname, path, target=None):
        if fullname in self.module_registry:
            synthetic_name = self.module_registry[fullname]
            if synthetic_name not in sys.modules:
                init_func = self.init_functions.get(synthetic_name)
                if init_func:
                    init_func()
            import importlib.util
            return importlib.util.find_spec(synthetic_name)
        return None
sys.meta_path.insert(0, CriboBundledFinder(__cribo_modules, __cribo_init_functions))
__cribo_init___cribo_35664f_constants()
__cribo_init___cribo_2092b2_config()
"""\nVariable name collision test.\nBoth modules define variables with the same names.\n"""
API_URL = sys.modules['constants'].API_URL
VERSION = sys.modules['constants'].VERSION
DEFAULT_TIMEOUT = sys.modules['constants'].DEFAULT_TIMEOUT
CONFIG_API_URL = sys.modules['config'].API_URL
CONFIG_VERSION = sys.modules['config'].VERSION
MAX_RETRIES = sys.modules['config'].MAX_RETRIES
def main():
    print(f"Constants API URL: {API_URL}")
    print(f"Config API URL: {CONFIG_API_URL}")
    print(f"Constants Version: {VERSION}")
    print(f"Config Version: {CONFIG_VERSION}")
    print(f"Default Timeout: {DEFAULT_TIMEOUT}")
    print(f"Max Retries: {MAX_RETRIES}")
    return {"constants_api_url": API_URL, "config_api_url": CONFIG_API_URL, "constants_version": VERSION, "config_version": CONFIG_VERSION, "default_timeout": DEFAULT_TIMEOUT, "max_retries": MAX_RETRIES}
if __name__ == "__main__":
    result = main()
    print("Result:", result)
