---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/collections_abc_wrapper/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import functools
import types
@functools.cache
def __cribo_init___cribo_f0aa89_compat():
    module = types.SimpleNamespace()
    """compat.py - Compatibility module with side effects."""
    print("Loading compat module...")
    from collections.abc import MutableMapping, Mapping
    module.MutableMapping = MutableMapping
    module.Mapping = Mapping
    __all__ = ["MutableMapping", "Mapping"]
    module.__all__ = ['MutableMapping', 'Mapping']
    return module
compat = __cribo_init___cribo_f0aa89_compat()
MutableMapping = compat.MutableMapping
class CaseInsensitiveDict(MutableMapping):
    """A case-insensitive dict-like object."""

    def __init__(self):
        self._store = {}

    def __setitem__(self, key, value):
        self._store[key.lower()] = value

    def __getitem__(self, key):
        return self._store[key.lower()]

    def __delitem__(self, key):
        del self._store[key.lower()]

    def __iter__(self):
        return iter(self._store)

    def __len__(self):
        return len(self._store)
CaseInsensitiveDict.__module__ = 'structures'
"""structures.py - Contains data structures."""
"""Test case for collections.abc imports in wrapper modules."""
d = CaseInsensitiveDict()
d["Accept"] = "application/json"
print(f"Accept header: {d['accept']}")
print("Success!")
