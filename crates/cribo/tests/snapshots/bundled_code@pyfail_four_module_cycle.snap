---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/pyfail_four_module_cycle/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import types
def step_c():
    return "C_step"
module_c = types.SimpleNamespace()
module_c.step_c = step_c
def start_process():
    """Start the processing chain A -> B -> C -> D -> A"""
    return f"A({process_in_b()})"
def final_step():
    """Final step called by module_d to complete the cycle"""
    return "A_final"
module_a = types.SimpleNamespace()
module_a.start_process = start_process
module_a.final_step = final_step
def step_d():
    return "D_step"
module_d = types.SimpleNamespace()
module_d.step_d = step_d
def step_b():
    return "B_step"
module_b = types.SimpleNamespace()
module_b.step_b = step_b
def main():
    result = module_a.start_process()
    print(f"Four module cycle result: {result}")
if __name__ == "__main__":
    main()
if __name__ == "__main__":
    main()
