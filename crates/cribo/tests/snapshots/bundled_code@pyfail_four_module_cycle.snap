---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/pyfail_four_module_cycle/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

import module_a
if __name__ == "__main__":
    main()
def main():
    result = module_a.start_process()
    print(f"Four module cycle result: {result}")
if __name__ == "__main__":
    main()
from module_d import process_in_d
def step_c():
    return "C_step"
def process_in_c():
    """Process in C, depends on D"""
    return f"C({process_in_d()})"
from module_b import process_in_b
def final_step():
    """Final step called by module_d to complete the cycle"""
    return "A_final"
def start_process():
    """Start the processing chain A -> B -> C -> D -> A"""
    return f"A({process_in_b()})"
from module_a import final_step
def step_d():
    return "D_step"
def process_in_d():
    """Process in D, depends back on A - completes the 4-module cycle"""
    return f"D({final_step()})"
from module_c import process_in_c
def step_b():
    return "B_step"
def process_in_b():
    """Process in B, depends on C"""
    return f"B({process_in_c()})"
