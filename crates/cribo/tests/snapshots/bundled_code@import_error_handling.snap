---
source: crates/cribo/tests/test_bundling_snapshots.rs
input_file: crates/cribo/tests/fixtures/import_error_handling/main.py
---
#!/usr/bin/env python3
# Generated by Cribo - Python Source Bundler
# https://github.com/ophidiarium/cribo

from contextlib import suppress
import sys
"""Test various ways imports can be safely handled when they might fail."""
print("=== Import Error Handling Test ===")
print("\n1. Testing try/except block:")
try:
    import nonexistent_module
    print("  - Successfully imported nonexistent_module (unexpected!)")
except ImportError:
    print("  - ImportError caught for nonexistent_module (expected)")
print("\n2. Testing with suppress:")
with suppress(ImportError):
    import another_nonexistent
    print("  - This line should not execute")
print("  - Continued after suppressed import")
print("\n3. Testing nested imports in try block:")
try:
    from fake_package import fake_module
    from fake_package.submodule import something
except ImportError as e:
    print(f"  - Caught ImportError: {e}")
print("\n4. Testing conditional import:")
if sys.platform == "win32":
    try:
        import winreg
        print("  - Imported winreg (Windows)")
    except ImportError:
        print("  - Failed to import winreg (not Windows)")
else:
    print("  - Skipped winreg import (not Windows)")
print("\n=== All tests completed successfully ===")
