{
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true
    },
    "rust-analyzer.check.command": "clippy",
    "rust-analyzer.cargo.buildScripts.enable": true,
    "rust-analyzer.cargo.features": "all",
    "rust-analyzer.cargo.extraEnv": {
        "RUSTC_BOOTSTRAP": "1",
        "RUSTFLAGS": "--cfg proc_macro_span --cfg verus_keep_ghost"
    },
    "markdownlint.configFile": ".markdownlint-cli2.yaml",
    "rust-analyzer.runnableEnv": {
        "RUSTC_BOOTSTRAP": "1"
    },
    "rust-analyzer.checkOnSave": true,
    "rust-analyzer.testExplorer": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
    "rust-analyzer.diagnostics.disabled": [
        "unresolved-extern-crate",
        "syntax-error"
    ],
    "rust-analyzer.imports.granularity.enforce": true,
    "rust-analyzer.imports.granularity.group": "crate",
    "rust-analyzer.imports.group.enable": true,
    "rust-analyzer.debug.engine": "llvm-vs-code-extensions.lldb-dap",
    "python.languageServer": "None",
    "[json][jsonc][yaml][github-actions-workflow][python][markdown]": {
        "editor.defaultFormatter": "dprint.dprint",
        "editor.formatOnSave": true
    },
    "[markdown]": {
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        },
        "editor.codeActionsOnSave": {
            "source.fixAll.markdownlint": "explicit"
        }
    },
    "[toml]": {
        "editor.quickSuggestions": {
            "strings": "on"
        },
        "editor.defaultFormatter": "tamasfe.even-better-toml",
        "editor.formatOnSave": true
    },
    "evenBetterToml.schema.enabled": true,
    "evenBetterToml.taplo.configFile.path": ".taplo.toml",
    "[python]": {
        "diffEditor.ignoreTrimWhitespace": false,
        "editor.defaultFormatter": "charliermarsh.ruff"
    },
    "ruff.lint.enable": false, // only format
    "cSpell.enabled": false,
    "chat.agent.enabled": true,
    "chat.promptFiles": true,
    "chat.instructionsFilesLocations": {
        ".github/instructions": true
    },
    "github.copilot.chat.agent.thinkingTool": true,
    "github.copilot.advanced": {
        "useLanguageServer": true
    },
    "mcp": {
        "servers": {
            "context7": {
                "command": "npx",
                "args": [
                    "-y",
                    "@upstash/context7-mcp"
                ]
            },
            "github": {
                "type": "http",
                "url": "https://api.githubcopilot.com/mcp/"
            }
        }
    },
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/__pycache__": true,
        "**/.zed": true,
        "**/.idea": true
    },
    "sonarlint.connectedMode.project": {
        "connectionId": "ophidiarium",
        "projectKey": "ophidiarium_cribo"
    },
    "python.testing.unittestEnabled": false,
    "python.testing.pytestEnabled": false,
    "coderabbit.autoReviewMode": "disabled",
    "git.branchProtection": [
        "main"
    ],
    "git.branchProtectionPrompt": "alwaysPrompt",
    "chat.mcp.access": "all"
}
